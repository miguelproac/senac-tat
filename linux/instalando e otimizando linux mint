instalando e otimizando linux mint na aula do SENAC TATUAPÈ 
 
1- sudo apt install linux-oem-22.04d fduils
kernel instalado 6.5  linux mint 21.x 
sudo reboot
reiniciar o sistema
sudo uname -a 
verficar para ver se deu certo

2- sudo apt install software-properties-common build-essential lsb-core dkms 
instalaçao de um software base do Mint
sudo apt install htop nmon psensor tlp tlp-rdw cpufrequtils cputool ipmitool ipmiutil smartmontools 
instalaçao de software basico de monitoramento e hardware 
sudo apt install ttf-mscorefonts-installer cheese guvcview v4l-utils cairo-dock vim git p7zip-full p7zip-rar
instalaçao de softwares basicos de produtividade e facilidade 
sudo reboot
* DICA: sempre após instalaçao de um software de reboot e teste o programa, pois se algo der errado voce estara ciente de onde o erro começou.

3- sudo apt install vainfo intel-gpu-tools mesa-opencl-icd mesa-utils-extra
sudo apt install libegl1-mesa libgl1-mesa-glx libgles2-mesa libassimp5
instalando drivers de video 
sudo reboot
sudo glxinfo | less 
sudo glxgears 
para testar os drivers da intel mesa baixados 

4- softwares para testar desempenho
PassMark: https://www.passmark.com/products/pt_linux/index.php
_ Hardinfo: https://github.com/lpereira/hardinfo
_ Unigine.: https://benchmark.unigine.com/
_ GpuTest.: https://www.geeks3d.com/gputest/

5- baixando virtual box 
wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc
cat oracle_vbox_2016.asc | gpg --dearmor | sudo tee /usr/share/keyrings/virtualbox.gpg > /dev/null 2>&1

baixando virtual box

sudo cat /etc/os-release
sudo cat /etc/lsb-release
verificar informaçoes do sobre versoes e codinome do seu sistema operacional

sudo inxi -CMSfxxx
sudo lscpu
verficando informaçoes do sistema e hardware ( ambiente grafico seria menu, informaçoes do sistema )

sudo sh -c 'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/virtualbox.gpg] https://download.virtualbox.org/virtualbox/debian jammy contrib" >> /etc/apt/sources.list.d/virtualbox.list'
 criando repositorio do virtual box dentro do repositorio de sources lists

wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc
adicionando as chaves do repositorios no linux
cat oracle_vbox_2016.asc | gpg --dearmor | sudo tee /usr/share/keyrings/virtualbox.gpg > /dev/null 2>&1
 sudo apt update
para atualizar as listas incluindo as novas do virtual box
sudo apt install virtualbox-7.0 cpu-checker libvirt-clients git vim python2 python3
baixando o virtual box versao mais nova 7.0
sudo kvm-ok
verificando informaçoes do kernel virtual machine
sudo virt-host-validate
verificando as informações de validação do host da Biblioteca LibVirt
para corriir os erros do FREEZER do comando sudo virt-host-validate utilizar o comando sudo vim etc/default/grub para abrir o arquivo e editar a lkinha 10
sudo update-grub para atualizar os arquivos grub e depois sudo reboot


7- instalando docker 
sudo apt install apt-transport-https ca-certificates curl software-properties-common gnupg-agent
para baixar as dependencias basicas do docker
wget -q https://download.docker.com/linux/ubuntu/gpg 
cat gpg | gpg --dearmor | sudo tee /usr/share/keyrings/docker-ce.gpg > /dev/null 2>&1
para criar as chaves do repositorio
sudo add-apt-repository "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-ce.gpg] https://download.docker.com/linux/ubuntu jammy stable"
para adiconar o repositorio ao linux 
* ATENÇAO caso voce baixe uma versao errada, como por exemplo a da versao anterior, a soluçao é vc acessar o repositorio de sourecs lists (cd /etc/apt/sources.list.d/)
e em seguida alterar um arquivo que esta la dentro (cat additional-repositories.list)--(sudo vim additional-repositories.list) e apagar a versao antiga que esta la. depois disso sudo apt update*

sudo apt install docker-ce docker-compose git vim python2 python3
instalando o docker e o compose 
OBSERVAÇÃO IMPORTANTE: a versão do Docker-Compose utilizando o Sources List do Docker-CE está
desatualizada em relação ao projeto do Github: https://github.com/docker/compose, é recomendado
baixar o Binário do projeto e atualizar a versão no Linux Mint com o procedimento abaixo 


#removendo o Docker Compose
#opção do comando apt: purgue (remove --purge packages)
sudo apt purge docker-compose

#baixando o Docker Compose do Projeto do Github
#opção do comando curl: -S (show-error), -L (location), -o (output) (Build 2.23.3 26/11/2023)
sudo curl -SL https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64 -o /usr/bin/docker-compose

#alterando as permissões do Binário do Docker Compose	
#opção do comando chmod: -v (verbose), 755 (User=RWX,Group-R-X,Other-R-X)
sudo chmod -v 755 /usr/bin/docker-compose

sudo usermod -a -G docker $USER
adicionar o seu usuario no grupo do Docker
newgrp docker
fazendo login em um novo grupo do Docker

baixando gns3
sudo dpkg --add-architecture i386
para adicionar ao linux o suporte de arquitetura
sudo add-apt-repository ppa:gns3/ppa
adicionando o repositorio pessoal do gns3 
* PPA= quer dizer Personal Package Archives, os repositórios deste tipo nada mais são do quer servidores na internet onde se encontram os programas que não estão nos repositórios oficias da sua distro.
sudo apt update
* semre apos adicionar criaçao de de repositorios ou soucers list de esse coamndo para aatualizar as listas e ver se deu tambem um possivel erro 

sudo apt install gns3-gui gns3-iou gns3-server gns3-webclient-pack dynamips vpcs xterm ubridge nmap \
iptraf-ng iperf3 ipcalc git vim uml-utilities bridge-utils wireshark wireshark-common wireshark-dev \
cpulimit qemu qemu-utils qemu-kvm qemu-user qemu-system-x86 python3 python3-pyqt5 telnet kvmtool \
vinagre virt-viewer python2 cpu-checker libvirt-clients
para instalar o gns3 e todas suas dependencias 

sudo chmod -v 777 /usr/bin/ubridge
alterar permissoes do Ubridge binario 

gns3 -- version 
para verificar versao do gns3

sudo usermod -a -G wireshark $USER
adicionando o seu usuário no grupo do Wireshark

#alterando a prioridade do grupo do binário do Dumpcap
#opção do comando chgrp: -v (verbose)
sudo chgrp -v wireshark /usr/bin/dumpcap

#alterando as permissões do binário do Dumpcap
#opções do comando chmod: -v (verbose), 750 (user=RWX,group=R-X,other=---)
sudo chmod -v 750 /usr/bin/dumpcap

#configurando as opções de captura do Dumpcap
sudo setcap cap_net_raw,cap_net_admin=eip /usr/bin/dumpcap
sudo getcap /usr/bin/dumpcap

#forçando o seu usuário a pertencer ao grupo do Wireshark
#opção do comando gpasswd: -a (add), $USER (environment variable)
sudo gpasswd -a $USER wireshark

#fazendo login em um novo grupo do Wireshark
newgrp wireshark

#verificando os identificadores de usuário e grupos
id

#recomendado reinicializar a máquina para aplicar as permissões
sudo reboot
 




